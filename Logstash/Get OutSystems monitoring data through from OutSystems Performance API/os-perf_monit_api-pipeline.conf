input {
  http_poller {
    urls => {
      myurl => {
        method => get
        url => "https://????CustomerEnvUrl????/PerformanceProbe/rest/PerformanceMonitoringAPI/RequestEvents/?StartInstant=2019-07-05T00:00:00.000Z&EndInstant=2020-01-01T00:00:00.000Z"
        user => "????"
        password => "????"
        headers => { Accept => "application/json" }
      }
    }
    request_timeout => 60

    schedule => { cron => "* * * * * UTC" }
    codec => json
  }
}

filter {
  #------------------------------------------------------------------------------#
  # split the API batch in JSON 
  #------------------------------------------------------------------------------#
  split
  {
    field => "RequestEventList"
  }

  #------------------------------------------------------------------------------#
  # remove useless fields common in all request types
  #------------------------------------------------------------------------------#
  mutate
  {
    remove_field => ["ResultsTruncated"]
    remove_field => ["@version"]
  }
  
#------------------------------------------------------------------------------#
  # Generate common fields
  #------------------------------------------------------------------------------#

  mutate
  {
    #-----------------------------#
    # Common fields
    #-----------------------------#
    rename => { "[RequestEventList][ApplicationKey]"    => "application_key"  }
    rename => { "[RequestEventList][ApplicationName]"   => "application_name"  }
    rename => { "[RequestEventList][RequestKey]"        => "request_key"  }
    rename => { "[RequestEventList][ModuleKey]"         => "module_key"  }
    rename => { "[RequestEventList][ModuleName]"        => "module_name"  }
    rename => { "[RequestEventList][RequestEventName]"  => "request_event_name"  }
    rename => { "[RequestEventList][Instant]"           => "instant"  }
        
    #-----------------------------#
    # Common Request fields
    #-----------------------------#
    rename => { "[RequestEventList][RequestEventDetails][AK]"   => "action_key"  }
    rename => { "[RequestEventList][RequestEventDetails][AN]"   => "action_name"  }
    rename => { "[RequestEventList][RequestEventDetails][EK]"   => "environment_key"  }
    rename => { "[RequestEventList][RequestEventDetails][EN]"   => "environment_name"  }
    rename => { "[RequestEventList][RequestEventDetails][EPK]"  => "endpoint_key"  }
    rename => { "[RequestEventList][RequestEventDetails][EPN]"  => "endpoint_name"  }
    rename => { "[RequestEventList][RequestEventDetails][TK]"   => "tenant_key"  }
    rename => { "[RequestEventList][RequestEventDetails][TN]"   => "tenant_name"  }
    rename => { "[RequestEventList][RequestEventDetails][FN]"   => "frontend_name"  }  
  }
  
  mutate {
    add_field => { "customer_name" => "????" }
    add_field => { "location_name" => "????" }
  }

  #------------------------------------------------------------------------------#
  # create the document id
  #------------------------------------------------------------------------------#
  fingerprint
  {
    source => ["[instant]", "[application_key]", "[request_key]", "[module_key]", "[request_event_name]"]
    target => "[@metadata][fingerprint]"
    method => "MURMUR3"
    concatenate_sources => true
  }

  #------------------------------------------------------------------------------#
  # Generate fields according to request type:
  #
  # WebScreenClientExecuted;
  # WebScreenServerExecuted;
  # QueryExecuted;
  # ConsumedIntegrationExecuted;
  # ExtensionExecuted.
  #
  #------------------------------------------------------------------------------#
  if [request_event_name] == "WebScreenClientExecuted"
  {
    mutate
    {
      # WebScreenClientExecuted

      rename => { "[RequestEventList][RequestEventDetails][VK]"   => "visitor_key"  }
      rename => { "[RequestEventList][RequestEventDetails][ViK]"  => "visit_key"  }
      rename => { "[RequestEventList][RequestEventDetails][SK]"   => "session_key"  }
      rename => { "[RequestEventList][RequestEventDetails][SR]"   => "screen_resolution"  }
      rename => { "[RequestEventList][RequestEventDetails][UK]"   => "user_key"  }
      rename => { "[RequestEventList][RequestEventDetails][UA]"   => "user_agent"  }    
      rename => { "[RequestEventList][RequestEventDetails][D]"    => "total_duration"  }
      rename => { "[RequestEventList][RequestEventDetails][LT]"   => "load_time"  }
      rename => { "[RequestEventList][RequestEventDetails][TTFB]" => "time_to_first_byte"  }
      rename => { "[RequestEventList][RequestEventDetails][TTLB]" => "time_to_last_byte"  }
      rename => { "[RequestEventList][RequestEventDetails][DMan]" => "device_manufacturer"  }
      rename => { "[RequestEventList][RequestEventDetails][DMod]" => "device_model"  }
      rename => { "[RequestEventList][RequestEventDetails][DPlat]" => "device_platform"  }
      rename => { "[RequestEventList][RequestEventDetails][DPlatV]" => "device_platform_version"  }
      rename => { "[RequestEventList][RequestEventDetails][NT]"   => "network_type"  }
      rename => { "[RequestEventList][RequestEventDetails][CN]"   => "carrier_name"  }
      rename => { "[RequestEventList][RequestEventDetails][CCC]"  => "client_country_code"  }
      rename => { "[RequestEventList][RequestEventDetails][CNT]"  => "carrier_network_type"  }
      
      convert => {
        "total_duration" => "integer"
        "time_to_first_byte" => "integer"
        "time_to_last_byte" => "integer"
      }
    }
    
    range {
      ranges => [ 
        "total_duration",    0,        2000, "field:total_duration_class:Good",
        "total_duration", 2001,        8000, "field:total_duration_class:Fair",
        "total_duration", 8001,999999999999, "field:total_duration_class:Bad"
      ]
    }
  }
  else if [request_event_name] == "WebScreenServerExecuted"
  {
    mutate{
      # WebScreenServerExecuted 
      
      rename => { "[RequestEventList][RequestEventDetails][D]"    => "server_duration"  }
      rename => { "[RequestEventList][RequestEventDetails][TQT]"  => "total_query_time"  }
      rename => { "[RequestEventList][RequestEventDetails][TQE]"  => "total_query_executions"  }
      rename => { "[RequestEventList][RequestEventDetails][TET]"  => "total_extension_time"  }
      rename => { "[RequestEventList][RequestEventDetails][TEE]"  => "total_extension_executions"  }
      rename => { "[RequestEventList][RequestEventDetails][TCIT]" => "total_consumed_integration_time"  }
      rename => { "[RequestEventList][RequestEventDetails][TCIE]" => "total_consumed_integration_executions"  }
      rename => { "[RequestEventList][RequestEventDetails][IP]"   => "client_ip"  }
      rename => { "[RequestEventList][RequestEventDetails][SAT]"  => "session_acquisition_time"  }
      rename => { "[RequestEventList][RequestEventDetails][SS]"   => "session_size"  }
      rename => { "[RequestEventList][RequestEventDetails][VSS]"  => "viewstate_size"  }
      rename => { "[RequestEventList][RequestEventDetails][UID]"  => "user_id"  }  

      convert => {
        "server_duration" => "integer"
        "total_query_time" => "integer"
        "total_query_executions" => "integer"
        "total_extension_time" => "integer"
        "total_extension_executions" => "integer"
        "total_consumed_integration_time" => "integer"
        "total_consumed_integration_executions" => "integer"
        "session_acquisition_time" => "integer"
        "session_size" => "integer"
        "viewstate_size" => "integer"
      }
    }
    
    range {
      ranges => [ 
        "server_duration",    0,        1500, "field:total_duration_class:Good",
        "server_duration", 1501,        2000, "field:total_duration_class:Fair",
        "server_duration", 2001,999999999999, "field:total_duration_class:Bad",
        
        "viewstate_size",     0,        5000, "field:viewstate_size_class:Good",
        "viewstate_size",  5001,       10000, "field:viewstate_size_class:Fair",
        "viewstate_size", 10001,999999999999, "field:viewstate_size_class:Bad",      

        "session_size",    0,        4000, "field:session_size_class:Good",
        "session_size", 4001,        5000, "field:session_size_class:Fair",
        "session_size", 5001,999999999999, "field:session_size_class:Bad",      
        
        "total_consumed_integration_time",   0,         200, "field:total_consumed_integration_time_class:Good",
        "total_consumed_integration_time", 201,999999999999, "field:total_consumed_integration_time_class:Bad",
        
        "total_extension_time",   0,         200, "field:total_extension_time_class:Good",
        "total_extension_time", 201,999999999999, "field:total_extension_time_class:Bad",

        "total_query_time",   0,         200, "field:total_query_time_class:Good",
        "total_query_time", 201,999999999999, "field:total_query_time_class:Bad"
      ]
    }
  }
  else if [request_event_name] == "QueryExecuted"
  {
    mutate
    {
      # QueryExecuted 
      
      rename => { "[RequestEventList][RequestEventDetails][D]"    => "query_duration"  }
      rename => { "[RequestEventList][RequestEventDetails][OK]"   => "object_key"  }
      rename => { "[RequestEventList][RequestEventDetails][ON]"   => "object_name"  }
      rename => { "[RequestEventList][RequestEventDetails][NE]"   => "number_of_executions"  }
      rename => { "[RequestEventList][RequestEventDetails][OEK]"  => "object_espace_key"  }
      rename => { "[RequestEventList][RequestEventDetails][OEN]"  => "object_espace_name"  }
      
      convert => {
        "query_duration" => "integer"
        "number_of_executions" => "integer"
      }
    }
  }
  else if [request_event_name] == "ConsumedIntegrationExecuted"
  {
    mutate
    {
      # ConsumedIntegrationExecuted 
      
      rename => { "[RequestEventList][RequestEventDetails][D]"    => "integration_duration"  }
      rename => { "[RequestEventList][RequestEventDetails][OK]"   => "object_key"  }
      rename => { "[RequestEventList][RequestEventDetails][ON]"   => "object_name"  }
      rename => { "[RequestEventList][RequestEventDetails][OEK]"  => "object_espace_key"  }
      rename => { "[RequestEventList][RequestEventDetails][OEN]"  => "object_espace_name"  }
      rename => { "[RequestEventList][RequestEventDetails][NE]"   => "number_of_executions"  }
      rename => { "[RequestEventList][RequestEventDetails][IT]"   => "integration_type"  }
      rename => { "[RequestEventList][RequestEventDetails][IE]"   => "integration_endpoint"  }
      
      convert => {
        "integration_duration" => "integer"
        "number_of_executions" => "integer"
      }
    }
  }
  else if [request_event_name] == "ExtensionExecuted"
  {
    mutate
    {
      # ExtensionExecuted 
      
      rename => { "[RequestEventList][RequestEventDetails][D]"    => "extension_duration"  }
      rename => { "[RequestEventList][RequestEventDetails][OK]"   => "object_key"  }
      rename => { "[RequestEventList][RequestEventDetails][ON]"   => "object_name"  }
      rename => { "[RequestEventList][RequestEventDetails][OEK]"  => "object_espace_key"  }
      rename => { "[RequestEventList][RequestEventDetails][OEN]"  => "object_espace_name"  }
      rename => { "[RequestEventList][RequestEventDetails][NE]"   => "number_of_executions"  }
      
      convert => {
        "extension_duration" => "integer"
        "number_of_executions" => "integer"
      }      
    }
  }

  mutate
  {
    remove_field => ["RequestEventList"]
  }
}

output {
  elasticsearch {
    hosts => "10.0.6.4:9200"
    index => "os_performance_api"
    document_id => "%{[@metadata][fingerprint]}"
  }
}
