input {
  jdbc {
    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.error.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            CASE WHEN e.Action_Name='' THEN 'No Action' ELSE e.Action_Name END action_name,
            xa.KEY application_key,
            xa.NAME application_name,
            e.Entrypoint_Name entrypoint_name,
            e.EnvironmentInformation environment_info,
            e.Message error_message,
            e.Espace_Id espace_id,
            xe.NAME espace_name,
            e.id id,
            e.Instant instant,
            e.Module_Name module_name,
            e.Request_Key request_key,
            e.Server server_name,
            e.Session_Id session_id,
            e.Stack stack_trace,
            e.Tenant_Id tenant_id,
            t.NAME tenant_name,
            e.User_Id user_id
        FROM OSADMIN_LOG.oslog_Error e
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON e.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON e.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Error"
  }
}

input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.extension.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            e.Action_Name action_name,
            xa.KEY application_key,
            xa.NAME application_name,
            e.Instant instant,
            e.Duration duration,
            e.Session_Id session_id,
            e.User_Id user_id,
            e.Espace_Id espace_id,
            e.Tenant_Id tenant_id,
            e.Extension_Id extension_id,
            e.Executed_By executed_by,
            e.Error_Id error_id,
            e.Request_Key request_key,
            xe.NAME espace_name,
            t.NAME tenant_name,
            xex.NAME extension_name
        FROM OSADMIN_LOG.oslog_Extension e
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON e.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON e.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Extension xex ON e.Extension_Id=xex.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Extension"
  }
}
input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.general.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            Action_Name action_name,
            xa.KEY application_key,
            xa.NAME application_name,
            Client_IP client_ip,
            Entrypoint_Name entrypoint_name,
            Error_Id error_id,
            g.Espace_Id espace_id,
            xe.NAME espace_name,
            Instant instant,
            Message message_text,
            Module_Name module_name,
            Request_Key request_key,
            Session_Id session_id,
            g.Tenant_Id tenant_id,
            t.NAME tenant_name,
            User_Id user_id
        FROM OSADMIN_LOG.oslog_General g
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON g.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON g.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "General"
  }
}
input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.integration.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            i.Action action_name,
            xa.KEY application_key,
            xa.NAME application_name,
            d.Detail detail_link,
            d.DetailLabel detail_label,
            i.Duration duration,
            i.Endpoint endpoint_name,
            i.Error_Id error_id,
            i.Espace_Id espace_id,
            xe.NAME espace_name,
            i.Executed_by executed_by,
            i.Id id,
            i.Instant instant,
            i.Is_Expose is_expose,
            d.Message message_text,
            i.Request_Key request_key,
            i.Source source_ip,
            i.Tenant_Id tenant_id,
            i.Type integration_type,
            t.NAME tenant_name
        FROM OSADMIN_LOG.oslog_Integration i
            LEFT JOIN OSADMIN_OSPRD1.oslog_Int_Detail d ON i.Id = d.Id
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON i.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON i.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Integration"
  }
}
input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.mobile_request.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            mr.Id id,
            mr.Instant instant,
            mr.Espace_Id espace_id,
            mr.Tenant_Id tenant_id,
            mr.Screen screen_name,
            mr.Endpoint endpoint_name,
            mr.Source source_ip,
            mr.Duration duration,
            mr.Executed_by executed_by,
            mr.Error_Id error_id,
            mr.Request_Key request_key,
            mr.Login_Id login_id,
            mr.User_Id user_id,
            xe.NAME espace_name,
            xa.NAME application_name,
            xa.KEY application_key,
            t.NAME tenant_name,
            md.Message message_text,
            md.Detail detail_text,
            md.DetailLabel detail_label
        FROM OSADMIN_LOG.oslog_mobile_request mr
            LEFT JOIN OSADMIN_OSPRD1.oslog_MR_Detail md ON mr.Id = md.Id
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON mr.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON mr.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Mobile Request"
  }
}
input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.request_event.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            re.APPLICATIONKEY application_key,
            re.APPLICATIONNAME application_name,
            re.INSTANT instant,
            re.MODULEKEY module_key,
            re.MODULENAME module_name,
            re.REQUESTKEY request_key,
            re.REQUESTEVENTNAME request_event_name,
            re.EVENTDETAILS event_details
        FROM OSADMIN_LOG.oslog_RequestEvent re
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Request Event"
  }
}

input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.timer.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            xa.KEY application_key,
            xa.NAME application_name,
            c.Cyclic_Job_Key cyclic_job_key,
            xmc.NAME cyclic_job_name,
            c.Duration duration,
            c.Espace_Id espace_id,
            xe.NAME espace_name,
            c.Error_Id error_id,
            c.Executed_By executed_by,
            c.Instant instant,
            c.Should_Have_Run_At last_run,
            c.Next_Run next_run,
            c.Request_Key request_key,
            c.Tenant_Id tenant_id,
            t.NAME tenant_name
        FROM OSADMIN_LOG.oslog_Cyclic_Job c
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON c.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON c.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Cyclic_Job xcc ON c.Cyclic_Job_Key=xcc.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Meta_Cyclic_Job xmc ON c.Cyclic_Job_Key=xmc.SS_KEY
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Timer"
  }
}
input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.web_reference.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            w.Instant instant,
            w.Duration duration,
            w.URL url,
            w.Method method_name,
            w.Espace_Id espace_id,
            w.Tenant_Id tenant_id,
            w.Executed_by executed_by,
            w.Error_Id error_id,
            w.IntegrationLog_Id integr_log_id,
            t.NAME tenant_name
        FROM OSADMIN_LOG.oslog_Web_Reference w
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON w.Tenant_Id = t.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Web Reference"
  }
}
input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.web_request.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            s.Access_Mode access_mode,
            s.Action_Name action_name,
            xa.KEY application_key,
            xa.NAME application_name,
            s.Duration duration,
            s.Espace_Id espace_id,
            xe.NAME espace_name,
            s.Executed_By executed_by,
            s.Instant instant,
            s.Msisdn msisdn,
            s.Screen screen_name,
            s.Screen_Type screen_type,
            s.Session_Bytes session_bytes,
            s.Session_Id session_id,
            s.Session_Requests session_requests,
            s.Tenant_Id tenant_id,
            t.NAME tenant_name,
            s.User_Id user_id,
            s.Viewstate_Bytes viewstate_size,
            s.Request_Key request_key,
            s.Client_IP client_ip
        FROM OSADMIN_LOG.oslog_Screen s
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON s.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON s.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Web Request"
  }
}
input {
  jdbc {

    jdbc_driver_library => "${JDBC_LIBRARY}"
    jdbc_driver_class => "Java::oracle.jdbc.OracleDriver"
    jdbc_connection_string => "${JDBC_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"

    jdbc_paging_enabled => true
    tracking_column => "instant"
    use_column_value => true
    tracking_column_type => "timestamp"
    last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.web_service.last_run"

    schedule => "${JDBC_SCHEDULE}"
    #----------------------------------
    statement => "
        SELECT
            xa.KEY application_key,
            xa.NAME application_name,
            w.Client_IP client_ip,
            w.Duration duration,
            w.Error_Id error_id,
            w.Espace_Id espace_id,
            xe.NAME espace_name,
            w.Executed_by executed_by,
            w.Instant instant,
            w.Method method_name,
            w.Tenant_Id tenant_id,
            t.NAME tenant_name,
            w.Name webservice_name
        FROM OSADMIN_LOG.oslog_Web_Service w
            LEFT JOIN OSADMIN_OSPRD1.ossys_Tenant t ON w.Tenant_Id = t.ID
            LEFT JOIN OSADMIN_OSPRD1.ossys_Espace xe ON w.espace_id = xe.ID
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_MODULE xm ON xe.ID=xm.espace_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APP_DEFINITION_MODULE xad ON xm.ID=xad.module_id
            LEFT JOIN OSADMIN_OSPRD1.OSSYS_APPLICATION xa ON xad.application_id=xa.ID
        WHERE instant > :sql_last_value
        ORDER BY instant
    "
    type => "Web Service"
  }
}

filter {
  #------------------------------------------------------------------------------#
  # Common part
  #------------------------------------------------------------------------------#
  mutate {
    add_field => { "customer_name" => "${DATA_CUSTOMER_NAME}" }
    add_field => { "location_name" => "${DATA_LOCATION_NAME}" }
    add_field => { "environment_name" => "${DATA_ENVIRONMENT_NAME}" }
  }

  #------------------------------------------------------------------------------#
  # Module: Error
  #------------------------------------------------------------------------------#
  if [type] == "Error"{
    fingerprint
    {
      source => ["[id]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Error" }
      add_field => { "message_type" => "Error"}
      #add_field => { "user_name" => "No User"}
    }

    range {
      ranges => [
              "duration",    0,        2000, "field:duration_class:Good",
              "duration", 2001,        8000, "field:duration_class:Fair",
              "duration", 8001,999999999999, "field:duration_class:Bad"
      ]
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Extension
  #------------------------------------------------------------------------------#
  if [type] == "Extension"{
    fingerprint
    {
      source => ["[instant]", "[session_id]", "[request_key]", "[extension_id]", "[action_name]", "[espace_id]", "[tenant_id]", "[duration]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Extension" }
      add_field => { "message_type" => "Information"}
      #add_field => { "user_name" => "No User"}

      rename => { "[should_have_run_at]"   => "last_run"  }
    }

    range {
      ranges => [
              "duration",    0,        2000, "field:duration_class:Good",
              "duration", 2001,        8000, "field:duration_class:Fair",
              "duration", 8001,999999999999, "field:duration_class:Bad"
      ]
    }
  }

  #------------------------------------------------------------------------------#
  # Module: General
  #------------------------------------------------------------------------------#
  if [type] == "General"{
    fingerprint
    {
      source => ["[request_key]", "[instant]", "[message_text]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "General" }
      add_field => { "message_type" => "Information" }
      #add_field => { "user_name" => "No User" }
    }

    grok {
      patterns_dir => ["${PATTERNS_DIR}"]
      match => { "message_text" => "%{SPACE}%{MESSAGE_OBJECT:message_object}%{SPACE}%{WORD}%{SPACE}%{NUMBER:message_duration}%{GREEDYDATA}" }
    }

    mutate {
      convert => {
        "message_duration_custom" => "integer"
        "message_duration" => "integer"
      }
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Integration
  #------------------------------------------------------------------------------#
  if [type] == "Integration"{
    fingerprint
    {
      source => ["[id]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Integration" }
      add_field => { "message_type" => "Information"}
      #add_field => { "user_name" => "No User"}
    }

    range {
      ranges => [
              "duration",    0,        2000, "field:duration_class:Good",
              "duration", 2001,        8000, "field:duration_class:Fair",
              "duration", 8001,999999999999, "field:duration_class:Bad"
      ]
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Mobile Request
  #------------------------------------------------------------------------------#
  if [type] == "Mobile Request"{
    fingerprint
    {
      source => ["[id]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Mobile Request" }
      add_field => { "message_type" => "Information"}
      #add_field => { "user_name" => "No User"}
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Request Event
  #------------------------------------------------------------------------------#
  json {
    source => "event_details"
  }
  if [type] == "Request Event"{

    #----------------------------------------------------------------------------#
    # create the document id
    #----------------------------------------------------------------------------#
    fingerprint
    {
      source => ["[instant]", "[application_key]", "[request_key]", "[module_key]", "[request_event_name]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      #-----------------------------#
      # New fields
      #-----------------------------#
      add_field => { "monitoring_data_type" => "Request Event" }
      add_field => { "message_type" => "Information"}
    }

    mutate
    {
      #-----------------------------#
      # Common Request fields
      #-----------------------------#
      rename => { "[AK]"   => "action_key"  }
      rename => { "[AN]"   => "action_name"  }
      rename => { "[EK]"   => "environment_key"  }
      rename => { "[EN]"   => "environment_name"  }
      rename => { "[EPK]"  => "endpoint_key"  }
      rename => { "[EPN]"  => "endpoint_name"  }
      rename => { "[TK]"   => "tenant_key"  }
      rename => { "[TN]"   => "tenant_name"  }
      rename => { "[FN]"   => "frontend_name"  }
    }

    #----------------------------------------------------------------------------#
    # Generate fields according to request type:
    #
    # WebScreenClientExecuted;
    # WebScreenServerExecuted;
    # QueryExecuted;
    # ConsumedIntegrationExecuted;
    # ExtensionExecuted.
    #
    #----------------------------------------------------------------------------#
    if [request_event_name] == "WebScreenClientExecuted"
    {
      mutate
      {
        # WebScreenClientExecuted

        rename => { "[VK]"     => "visitor_key"  }
        rename => { "[ViK]"    => "visit_key"  }
        rename => { "[SK]"     => "session_key"  }
        rename => { "[SR]"     => "screen_resolution"  }
        rename => { "[UK]"     => "user_key"  }
        rename => { "[UA]"     => "user_agent"  }
        rename => { "[D]"      => "total_duration"  }
        rename => { "[LT]"     => "load_time"  }
        rename => { "[TTFB]"   => "time_to_first_byte"  }
        rename => { "[TTLB]"   => "time_to_last_byte"  }
        rename => { "[DMan]"   => "device_manufacturer"  }
        rename => { "[DMod]"   => "device_model"  }
        rename => { "[DPlat]"  => "device_platform"  }
        rename => { "[DPlatV]" => "device_platform_version"  }
        rename => { "[NT]"     => "network_type"  }
        rename => { "[CN]"     => "carrier_name"  }
        rename => { "[CCC]"    => "client_country_code"  }
        rename => { "[CNT]"    => "carrier_network_type"  }

        convert => {
          "total_duration" => "integer"
          "time_to_first_byte" => "integer"
          "time_to_last_byte" => "integer"
        }
      }

      range {
        ranges => [
                "total_duration",    0,        2000, "field:total_duration_class:Good",
                "total_duration", 2001,        8000, "field:total_duration_class:Fair",
                "total_duration", 8001,999999999999, "field:total_duration_class:Bad"
        ]
      }
    }
            else if [request_event_name] == "WebScreenServerExecuted"
    {
      mutate{
        # WebScreenServerExecuted

        rename => { "[D]"    => "server_duration"  }
        rename => { "[TQT]"  => "total_query_time"  }
        rename => { "[TQE]"  => "total_query_executions"  }
        rename => { "[TET]"  => "total_extension_time"  }
        rename => { "[TEE]"  => "total_extension_executions"  }
        rename => { "[TCIT]" => "total_consumed_integration_time"  }
        rename => { "[TCIE]" => "total_consumed_integration_executions"  }
        rename => { "[IP]"   => "client_ip"  }
        rename => { "[SAT]"  => "session_acquisition_time"  }
        rename => { "[SS]"   => "session_size"  }
        rename => { "[VSS]"  => "viewstate_size"  }
        rename => { "[UID]"  => "user_id"  }

        convert => {
          "server_duration" => "integer"
          "total_query_time" => "integer"
          "total_query_executions" => "integer"
          "total_extension_time" => "integer"
          "total_extension_executions" => "integer"
          "total_consumed_integration_time" => "integer"
          "total_consumed_integration_executions" => "integer"
          "session_acquisition_time" => "integer"
          "session_size" => "integer"
          "viewstate_size" => "integer"
          "user_id" => "integer"
        }
      }

      range {
        ranges => [
                "server_duration",    0,        1500, "field:total_duration_class:Good",
                "server_duration", 1501,        2000, "field:total_duration_class:Fair",
                "server_duration", 2001,999999999999, "field:total_duration_class:Bad",

                "viewstate_size",     0,        5000, "field:viewstate_size_class:Good",
                "viewstate_size",  5001,       10000, "field:viewstate_size_class:Fair",
                "viewstate_size", 10001,999999999999, "field:viewstate_size_class:Bad",

                "session_size",    0,        4000, "field:session_size_class:Good",
                "session_size", 4001,        5000, "field:session_size_class:Fair",
                "session_size", 5001,999999999999, "field:session_size_class:Bad",

                "total_consumed_integration_time",   0,         200, "field:total_consumed_integration_time_class:Good",
                "total_consumed_integration_time", 201,999999999999, "field:total_consumed_integration_time_class:Bad",

                "total_extension_time",   0,         200, "field:total_extension_time_class:Good",
                "total_extension_time", 201,999999999999, "field:total_extension_time_class:Bad",

                "total_query_time",   0,         200, "field:total_query_time_class:Good",
                "total_query_time", 201,999999999999, "field:total_query_time_class:Bad"
        ]
      }
    }
            else if [request_event_name] == "QueryExecuted"
    {
      mutate
      {
        # QueryExecuted

        rename => { "[D]"    => "query_duration"  }
        rename => { "[OK]"   => "object_key"  }
        rename => { "[ON]"   => "object_name"  }
        rename => { "[NE]"   => "number_of_executions"  }
        rename => { "[OEK]"  => "object_espace_key"  }
        rename => { "[OEN]"  => "object_espace_name"  }

        convert => {
          "query_duration" => "integer"
          "number_of_executions" => "integer"
        }
      }
    }
            else if [request_event_name] == "ConsumedIntegrationExecuted"
    {
      mutate
      {
        # ConsumedIntegrationExecuted

        rename => { "[D]"    => "integration_duration"  }
        rename => { "[OK]"   => "object_key"  }
        rename => { "[ON]"   => "object_name"  }
        rename => { "[OEK]"  => "object_espace_key"  }
        rename => { "[OEN]"  => "object_espace_name"  }
        rename => { "[NE]"   => "number_of_executions"  }
        rename => { "[IT]"   => "integration_type"  }
        rename => { "[IE]"   => "integration_endpoint"  }

        convert => {
          "integration_duration" => "integer"
          "number_of_executions" => "integer"
        }
      }
    }
            else if [request_event_name] == "ExtensionExecuted"
    {
      mutate
      {
        # ExtensionExecuted

        rename => { "[D]"    => "extension_duration"  }
        rename => { "[OK]"   => "object_key"  }
        rename => { "[ON]"   => "object_name"  }
        rename => { "[OEK]"  => "object_espace_key"  }
        rename => { "[OEN]"  => "object_espace_name"  }
        rename => { "[NE]"   => "number_of_executions"  }

        convert => {
          "extension_duration" => "integer"
          "number_of_executions" => "integer"
        }
      }
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Timer
  #------------------------------------------------------------------------------#
  if [type] == "Timer"{
    fingerprint
    {
      source => ["[request_key]", "[instant]", "[cyclic_job_key]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Timer" }
      add_field => { "message_type" => "Information"}
      #add_field => { "user_name" => "No User"}
    }

    range {
      ranges => [
              "duration",    0,        2000, "field:duration_class:Good",
              "duration", 2001,        8000, "field:duration_class:Fair",
              "duration", 8001,999999999999, "field:duration_class:Bad"
      ]
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Web Reference
  #------------------------------------------------------------------------------#
  if [type] == "Web Reference"{
    fingerprint
    {
      source => ["[instant]", "[duration]", "[url]", "[method_name]", "[espace_id]", "[tenant_id]", "[integr_log_id]", "[error_id]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Web Reference" }
      add_field => { "message_type" => "Information"}
      #add_field => { "user_name" => "No User"}
    }

    range {
      ranges => [
              "duration",    0,        2000, "field:duration_class:Good",
              "duration", 2001,        8000, "field:duration_class:Fair",
              "duration", 8001,999999999999, "field:duration_class:Bad"
      ]
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Web Request
  #------------------------------------------------------------------------------#
  if [type] == "Web Request"{
    fingerprint
    {
      source => ["[request_key]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Web Request" }
      add_field => { "message_type" => "Request"}
      #add_field => { "user_name" => "No User"}
    }

    range {
      ranges => [
              "duration",    0,        2000, "field:duration_class:Good",
              "duration", 2001,        8000, "field:duration_class:Fair",
              "duration", 8001,999999999999, "field:duration_class:Bad"
      ]
    }
  }

  #------------------------------------------------------------------------------#
  # Module: Web Service
  #------------------------------------------------------------------------------#
  if [type] == "Web Service"{
    fingerprint
    {
      source => ["[instant]", "[duration]", "[webservice_name]", "[method_name]", "[espace_id]", "[tenant_id]", "[client_ip]", "[executed_by]", "[error_id]"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
      concatenate_sources => true
    }

    mutate{
      add_field => { "monitoring_data_type" => "Web Service" }
      add_field => { "message_type" => "Request"}
      #add_field => { "user_name" => "No User"}
    }

    range {
      ranges => [
              "duration",    0,        2000, "field:duration_class:Good",
              "duration", 2001,        8000, "field:duration_class:Fair",
              "duration", 8001,999999999999, "field:duration_class:Bad"
      ]
    }
  }
}

output {
  stdout { codec => rubydebug }

  if [type] == "Error"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_error-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "Extension"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_extension-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "General"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_general-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "Integration"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_integration-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "Mobile Request"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_mobile_request-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "Request Event"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_request_event-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }

  if [type] == "Timer"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_timer-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "Web Reference"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_web_reference-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "Web Request"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_web_request-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
  if [type] == "Web Service"{
    elasticsearch {
      hosts => "${ES_HOSTS}"
      index => "os_mon_log_web_service-%{+yyyy.ww}"
      document_id => "%{[@metadata][fingerprint]}"
    }
  }
}
