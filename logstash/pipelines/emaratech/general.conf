input {

    file {
        path => "/Users/david/Developer/OutSystems/emaratech/logs/csv/Ext-GeneralLog-*.csv"
        start_position => "beginning"
        sincedb_path => "/Users/david/Developer/OutSystems/emaratech/logstash/run/Ext-GeneralLog.lastrun"
        codec => multiline {
            pattern => "^[0-9]+;"
            negate => "true"
            what => "previous"
        }
        add_field => {
            "[outsystems][environment_name]" => "Ext"
        }
    }

    file {
        path => "/Users/david/Developer/OutSystems/emaratech/logs/csv/Int-GeneralLog-*.csv"
        start_position => "beginning"
        sincedb_path => "/Users/david/Developer/OutSystems/emaratech/logstash/run/Int-GeneralLog.lastrun"
        codec => multiline {
            pattern => "^[0-9]+;"
            negate => "true"
            what => "previous"
        }
        add_field => {
            "[outsystems][environment_name]" => "Int"
        }
    }

}

filter {

    mutate {
        gsub => [ "message", "\r", "" ]
    }

    csv {
        separator => ";"
        columns => [
                "tenant_id",
                "instant",
                "session_id",
                "user_id",
                "application_espace_id",
                "error_id",
                "message_text",
                "message_type",
                "application_module_name",
                "request_key",
                "application_action_name",
                "application_entrypoint_name",
                "client_ip",
                "application_name"
        ]
    }

    if [instant] == "Instant" {
        drop {}
    }

    date {
        timezone => "UTC"
        match => [ "instant", "dd-MM-yyyy HH:mm:ss" ]
        add_field => { "[@metadata][has_timestamp]" => "true" }
    }
    if ![@metadata][has_timestamp] {
        date {
            remove_tag => [ "_dateparsefailure" ]
            timezone => "UTC"
            match => [ "instant", "yyyy-MM-dd HH:mm:ss" ]
            add_field => { "[@metadata][has_timestamp]" => "true" }
        }
    }

    mutate {
        rename => {
            "message" => "event"
        }
    }

    grok {
        patterns_dir => ["${PATTERNS_FOLDER:/Users/david/Developer/OutSystems/emaratech/logstash/patterns}"]
        match => { "message_text" => "%{SPACE}%{MESSAGE_OBJECT:[message][object]}%{SPACE}%{WORD}%{SPACE}%{NUMBER:[message][duration]}%{GREEDYDATA}" }
    }

    mutate {
        add_field => {
            "[ecs][version]" => "1.5.0"
            "[outsystems][customer_name]" => "Emaratech"
        }
        rename => {
            "session_id" => "[session][id]"
            "application_espace_id" => "[application][espace_id]"
            "message_text" => "[message][text]"
            "message_type" => "[message][type]"
            "application_module_name" => "[application][module_name]"
            "request_key" => "[request][key]"
            "application_action_name" => "[application][action_name]"
            "application_entrypoint_name" => "[application][entrypoint_name]"
            "application_name" => "[application][name]"
            "message_object" => "[message][object]"
            "message_duration" => "[message][duration]"
        }
        convert => {
            "[tenant_id]" => "integer"
            "[user_id]" => "integer"
            "[application_espace_id]" => "integer"
            "[message][duration]" => "integer"
        }
        remove_field => [
                "event",
                "instant",
                "path",
                "host"
        ]
    }

}

output {

    stdout { codec => rubydebug }

    elasticsearch {
        hosts => "localhost:9200"
        ilm_enabled => true
        ilm_rollover_alias => "os-mon-log-general"
        ilm_pattern => "000001"
        ilm_policy => "os-mon-log-ilm-policy"
    }

}