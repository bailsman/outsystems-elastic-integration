input {
    jdbc {
#        jdbc_driver_library => "/Users/david/Developer/OutSystems/elk/logstash-7.7.0/extra/sqljdbc_8.2/mssql-jdbc-8.2.2.jre8.jar"
        jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
        jdbc_connection_string => "jdbc:sqlserver://192.168.159.78:1433;database=CSDEVOPS11DEV_LOG;user=usrElastic;password=pwdElastic;loginTimeout=30;"
        jdbc_user => nil
        last_run_metadata_path => "/etc/logstash/pipelines/devops/development/error.last_run"
#        last_run_metadata_path => "/Users/david/Developer/OutSystems/elk/logstash-7.7.0/extra/run/error.last_run"
        schedule => "*/5 * * * *"

        jdbc_paging_enabled => true
        tracking_column => "instant_unix"
        use_column_value => true
        tracking_column_type => "numeric"

        statement => "
            SELECT
                instant_unix                = DATEDIFF(SECOND,'2020-01-01', instant),
                application_action_name     = CASE WHEN e.[Action_Name]='' THEN 'No Action' ELSE e.[Action_Name] END,
                application_key             = e.[Application_Key],
                application_name            = e.[Application_Name],
                application_entrypoint_name = e.[Entrypoint_Name],
                environment_information     = e.[EnvironmentInformation],
                message_text                = e.[Message],
                application_espace_id       = e.[Espace_Id],
                application_espace_name     = e.[Espace_Name],
                error_id                    = e.[id],
                import_latency              = DATEDIFF(minute,e.[Instant],GETDATE()),
                instant                     = e.[Instant],
                application_module_name     = e.[Module_Name],
                request_key                 = e.[Request_Key],
                server_name                 = e.[Server],
                session_id                  = e.[Session_Id],
                message_stack_trace         = SUBSTRING(e.[Stack], 1, 8191),
                tenant_id                   = e.[Tenant_Id],
                user_id                     = e.[User_Id],
                user_name                   = e.username
            FROM CSDEVOPS11DEV_LOG.[dbo].[oslog_Error] (nolock) e
            WHERE DATEDIFF(SECOND,'2020-01-01', instant) > :sql_last_value
        "
    }
}

filter {
    #------------------------------------------------------------------------------#
    # Common part
    #------------------------------------------------------------------------------#
    mutate {
        add_field => {
            "[ecs][version]" => "1.5.0"
            "[outsystems][customer_name]" => "DevOps"
            "[outsystems][location_name]" => "Linda-a-Velha"
            "[outsystems][environment_name]" => "Development"
        }

        convert => [ "instant", "string" ] # we need to convert this to a string to be able to parse it into the @timestamp field

        remove_field => [ "instant_unix" ] # this field was only used for controling the query pagination, so we don't need to keep it
    }

    date {
        match => ["instant", "ISO8601"]
        timezone => "Etc/UTC"
    }

    mutate {
        rename => { "instant" => "[log][instant]" } # the value of this field is now in the @timestamp field, so we just keep it as a control value
    }

    #------------------------------------------------------------------------------#
    # Specific part
    #------------------------------------------------------------------------------#
    fingerprint {
        source => ["[error_id]"]
        target => "[@metadata][fingerprint]"
        method => "MURMUR3"
        concatenate_sources => true
    }

    mutate {
        add_field => { "[log][data_source]" => "Error" }

        rename => {
            "application_action_name" => "[application][action_name]"
            "application_key" => "[application][key]"
            "application_name" => "[application][name]"
            "application_entrypoint_name" => "[application][entrypoint_name]"
            "application_espace_id" => "[application][espace_id]"
            "application_espace_name" => "[application][espace_name]"
            "application_module_name" => "[application][module_name]"
            "message_text" => "[message][text]"
            "message_stack_trace" => "[message][stack_trace]"
            "import_latency" => "[import][latency]"
            "request_key" => "[request][key]"
            "session_id" => "[session][id]"
        }
    }
}

output {
#    stdout { codec => rubydebug }

    elasticsearch {
        hosts => "localhost:9200"
        document_id => "%{[@metadata][fingerprint]}"
        ilm_enabled => true
        ilm_rollover_alias => "os-mon-log-error"
        ilm_pattern => "000001"
        ilm_policy => "os-mon-log-ilm-policy"
    }
}
