input {
    jdbc {
        jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
        jdbc_connection_string => "jdbc:sqlserver://192.168.159.78:1433;database=CSDEVOPS11DEV_LOG;user=usrElastic;password=pwdElastic;loginTimeout=30;"
        jdbc_user => nil
        last_run_metadata_path => "/etc/logstash/pipelines/devops/development/integration.last_run"
        schedule => "*/5 * * * *"

        jdbc_paging_enabled => true
        tracking_column => "instant_unix"
        use_column_value => true
        tracking_column_type => "numeric"

        statement => "
            SELECT
                instant_unix              = DATEDIFF(SECOND,'2020-01-01', instant),
                application_action_name   = i.[Action],
                application_key           = i.[Application_Key],
                application_name          = i.[Application_Name],
                integration_detail_link   = d.[Detail],
                integration_detail_label  = d.[DetailLabel],
                duration                  = i.[Duration],
                application_endpoint_name = i.[Endpoint],
                error_id                  = i.[Error_Id],
                application_espace_id     = i.[Espace_Id],
                application_espace_name   = i.[Espace_Name],
                integration_executor      = i.[Executed_by],
                integration_id            = i.[Id],
                import_latency            = DATEDIFF(minute, i.[Instant],GETDATE()),
                instant                   = i.[Instant],
                integration_expose        = i.[Is_Expose],
                integration_type          = i.[Type],
                message_text              = d.[Message],
                request_key               = i.[Request_Key],
                application_client_ip     = i.[Source],
                tenant_id                 = i.[Tenant_Id]
            FROM [dbo].[oslog_Integration] (nolock) i
                LEFT JOIN [dbo].[oslog_Int_Detail_0] (nolock) d ON i.Id = d.Id
            WHERE DATEDIFF(SECOND,'2020-01-01', instant) > :sql_last_value
        "
    }
}

filter {
    #------------------------------------------------------------------------------#
    # Common part
    #------------------------------------------------------------------------------#
    mutate {
        add_field => {
            "[ecs][version]" => "1.5.0"
            "[outsystems][customer_name]" => "DevOps"
            "[outsystems][location_name]" => "Linda-a-Velha"
            "[outsystems][environment_name]" => "Development"
        }

        convert => [ "instant", "string" ] # we need to convert this to a string to be able to parse it into the @timestamp field

        remove_field => [ "instant_unix" ] # this field was only used for controling the query pagination, so we don't need to keep it
    }

    date {
        match => ["instant", "ISO8601"]
        timezone => "Etc/UTC"
    }

    mutate {
        rename => { "instant" => "[log][instant]" } # the value of this field is now in the @timestamp field, so we just keep it as a control value
    }

    #------------------------------------------------------------------------------#
    # Specific part
    #------------------------------------------------------------------------------#
    fingerprint {
        source => ["[integration_id]"]
        target => "[@metadata][fingerprint]"
        method => "MURMUR3"
        concatenate_sources => true
    }

    mutate {
        add_field => { "[log][data_source]" => "Integration" }

        rename => {
            "application_action_name" => "[application][action_name]"
            "application_key" => "[application][key]"
            "application_name" => "[application][name]"
            "application_entrypoint_name" => "[application][entrypoint_name]"
            "application_espace_id" => "[application][espace_id]"
            "application_espace_name" => "[application][espace_name]"
            "application_client_ip" => "[application][client_ip]"
            "integration_detail_link" => "[integration][detail_link]"
            "integration_detail_label" => "[integration][detail_label]"
            "integration_executor" => "[integration][executor]"
            "integration_id" => "[integration][id]"
            "integration_expose" => "[integration][expose]"
            "integration_type" => "[integration][type]"
            "message_text" => "[message][text]"
            "import_latency" => "[import][latency]"
            "request_key" => "[request][key]"
        }
    }

    range {
        ranges => [
                "duration",    0,        2000, "field:duration_class:Good",
                "duration", 2001,        8000, "field:duration_class:Fair",
                "duration", 8001,999999999999, "field:duration_class:Bad"
        ]
    }
}

output {
    elasticsearch {
        hosts => "localhost:9200"
        document_id => "%{[@metadata][fingerprint]}"
        ilm_enabled => true
        ilm_rollover_alias => "os-mon-log-integration"
        ilm_pattern => "000001"
        ilm_policy => "os-mon-log-ilm-policy"
    }
}
